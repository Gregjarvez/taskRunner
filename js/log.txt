(function($) {
  var id = "103072ac72b53661fb562478707c6cf2";
  var navigator = window.navigator;
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showLocation);
  } else {
    $('#location').html('unavilable');
    $('#temp').html('unavailable');
    $('description').html('unavilable');
  };

  function convert(deg) {
    return Math.floor(deg);
  }

  function showLocation(location) {
    updatebyGeo(location.coords.latitude, location.coords.longitude);
  }

  function updatebyGeo(lat, lon) {
    var url = 'Http://api.openweathermap.org/data/2.5/find?lat=' + lat +
      '&lon=' + lon +
      '&type=accurate' +
      '&units=metric&appid=' + id;
    sendRequest(url);
  }



  function sendRequest(url) {
    $.getJSON(url, function(response) {
      var responseText = response;
      var weather = {};
      weather.location = responseText.list[0].name;
      weather.temp = responseText.list[0].main.temp;
      weather.iconCode = responseText.list[0].weather[0].icon;
      weather.description = responseText.list[0].weather[0].description;
      update(weather);
    });

  }

  function update(weather) {
    $('#location').html(weather.location);
    $('#temp').html(convert(weather.temp) + '&deg');
    $('#description').html(weather.description);
    $('.weather img').attr('src', "http://openweathermap.org/img/w/" + weather.iconCode + ".png");

  }

})(jQuery);
//document.rea



<div class="weather">
  <h2 class='location' id='location'></h2>
  <h1 class='temperature' id='temp'></h1>
  <img src="" alt="">
  <h3 class='description' id='description'></h3>
</div>

	function handleDragStart(e) {
		drag = this;

		e.dataTransfer.effectAllowed = 'move';
		e.dataTransfer.setData('text/html', this.outerHTML);
		console.log(drag);

	}

	function handleDragOver(e) {
		if (e.preventDefault) {
			e.preventDefault(); // Necessary. Allows us to drop.
		}

		e.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.

		return false;
	}

	function handleDrop(e) {
		// this/e.target is current target element.

		if (e.stopPropagation) {
			e.stopPropagation(); // Stops some browsers from redirecting.
		}

		// Don't do anything if dropping the same column we're dragging.
		if (drag != this) {
			// Set the source column's HTML to the HTML of the column we dropped on.
			//alert(this.outerHTML);
			//dragSrcEl.innerHTML = this.innerHTML;
			//this.innerHTML = e.dataTransfer.getData('text/html');
			this.parentNode.removeChild(drag);
			var dropHTML = e.dataTransfer.getData('text/html');
			this.insertAdjacentHTML('beforebegin', dropHTML);
			var dropElem = this.previousSibling;
			addDnDHandlers(dropElem);

		}
		this.classList.remove('over');
		return false;
	}


    [draggable] {
    	-moz-user-select: none;
    	-khtml-user-select: none;
    	-webkit-user-select: none;
    	user-select: none;
    	/* Required to make elements draggable in old WebKit */
    	-khtml-user-drag: element;
    	-webkit-user-drag: element;
    }
		.weather {
			width: 100%;
			height: auto;
			background: $transWhite;
			margin-top: 10px;
			@include padding;
		}
		.location {
			@include h2;
			text-align: center;
			font-size: 1.2em;
			display: block;
		}
		.temperature {
			width: 100%;
			height: auto;
			color: white;
			text-align: center;
			font-weight: $font-weight;
			font-size: 3em;
		}
		img {
			display: block;
			width: 60px;
			height: 60px;
			margin: 0 auto;
		}
		.description {
			width: 100%;
			color: white;
			text-align: center;
			@include padding;
			font-weight: $font-weight;
			font-size: .9em;
			letter-spacing: $letter-spacing;
			@include font-smoothing;
		}
